load.libraries <- c('data.table', 'testthat', 'gridExtra', 'corrplot', 'GGally', 'ggplot2', 'e1071', 'dplyr')
install.lib <- load.libraries[!load.libraries %in% installed.packages()]
for(libs in install.lib) install.packages(libs, dependences = TRUE)
sapply(load.libraries, require, character = TRUE)
load.libraries <- c('data.table', 'testthat', 'gridExtra', 'corrplot', 'GGally', 'ggplot2', 'e1071', 'dplyr')
install.lib <- load.libraries[!load.libraries %in% installed.packages()]
for(libs in install.lib) install.packages(libs, dependences = TRUE)
sapply(load.libraries, require, character = TRUE)
install.packages("gridExtra")
install.packages(c("boot", "Matrix", "mgcv"))
install.packages("data.table")
install.packages("testthat")
install.packages("corrplot","GGally","e1071","dplyr")
install.packages("GGally")
install.packages("corrplot","e1071","dplyr")
install.packages("e1071")
install.packages("dplyr")
install.packages("corrplot")
install.packages("ggplot2")
load.libraries <- c('data.table', 'testthat', 'gridExtra', 'corrplot', 'GGally', 'ggplot2', 'e1071', 'dplyr')
cat_var <- names(train)[which(sapply(train, is.character))]
library(readr)
train <- read_csv("~/train.csv")
View(train)
dim(train)
str(train)
head(train)
colSums(train, is.na)
colSums(sapply(train, is.na))
head(stats::ftable(train))
install.packages("caTools")  # install external package
library(caTools)
library(caTools)
jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F",
"yellow", "#FF7F00", "red", "#7F0000"))
dx <- 400                    # define width
dy <- 400                    # define height
C <- complex( real = rep(seq(-2.2, 1.0, length.out = dx), each = dy ),
imag = rep(seq(-1.2, 1.2, length.out = dy), dx ) )
C <- matrix(C, dy, dx)       # reshape as square matrix of complex numbers
Z <- 0                       # initialize Z to zero
X <- array(0, c(dy, dx, 20)) # initialize output 3D array
for (k in 1:20) {            # loop with 20 iterations
Z <- Z^2 + C               # the central difference equation
X[, , k] <- exp(-abs(Z))   # capture results
}
write.gif(X, "Mandelbrot.gif", col = jet.colors, delay = 100)
?rpart
?mean
??rpart
X <- c(0:10, 50)
X
xm <- mean(x)
xm <- mean(x)
x <- c(0:10, 50)
xm <- mean(x)
setwd("~/")
getwd()
train <- read_file(train.csv)
train <- read_csv(train.csv)
train <- read_csv('train.csv'')
train <- read_csv('train.csv'')
train <- read_csv('train.csv')
spec(train)
View(train)
subzone <- subset(train, train.MSZoning == 'RL;')
subzone <- subset(train, train.MSZoning == 'RL')
subzone <- subset(train, state.MSZoning == 'RL')
subzone <- subset(train, MSZoning == 'RL')
subzone <- subset(train, MSZoning == 'RM')
View(subzone)
subzone1 <- train[MSZoning == 'C(all)',"MSSubClass"]
subzone1 <- train[MSZoning == 'C (all)',"MSSubClass"]
subzone1 <- train[ MSZoning == 'C (all)',"MSSubClass"]
subzone1 <- train[ train$MSZoning == 'C (all)',"MSSubClass"]
View(subzone1)
plot(cars)
names(train)
summary(train)
